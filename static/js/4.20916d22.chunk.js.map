{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","Tabcontent","useEffect","스위치변경","누른탭","Info","재고","num","connect","state","reducer","alert열렸니","reducer2","useState","알람창","알람창변경","누른탭변경","스위치","Timer","setTimeout","clearTimeout","id","useParams","history","useHistory","product","shoes","find","a","className","src","width","title","content","price","onClick","b","재고변경","dispatch","type","data","name","quan","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout","style","height"],"mappings":"wMAoBIA,EAAKC,IAAOC,IAAV,+CAGFC,EAAKF,IAAOG,GAAV,gEAEO,SAAAC,GAAK,OAAIA,EAAMC,gBA+E1B,SAASC,EAAWF,GAMlB,OAJAG,qBAAU,WACPH,EAAMI,gCAAM,MAGE,IAAdJ,EAAMK,mBACA,gDACe,IAAdL,EAAMK,mBACP,qDADF,EAMT,SAASC,EAAKN,GACZ,OACE,gDAASA,EAAMO,aAAGP,EAAMQ,QAYdC,uBARhB,SAAsBC,GACpB,MAAO,CACLA,MAAQA,EAAMC,QACdC,0BAAWF,EAAMG,YAKLJ,EAxGhB,SAAgBT,GAAQ,IAAD,EAEDc,oBAAS,GAFR,mBAEdC,EAFc,KAEVC,EAFU,OAIDF,mBAAS,GAJR,mBAIdT,EAJc,KAIVY,EAJU,OAKDH,oBAAS,GALR,mBAKdI,EALc,KAKVd,EALU,KAOnBD,qBAAU,WACR,IAAIgB,EAAQC,YAAW,WAAKJ,GAAM,KAAQ,KAC1C,OAAO,WAAQK,aAAaF,MAK5B,CAACJ,IAdgB,IAkBdO,EAAMC,cAAND,GACDE,EAAUC,cACVC,EAAU1B,EAAM2B,MAAMC,MAAK,SAASC,GACtC,OAAOA,EAAEP,IAAMA,KAEjB,OACE,sBAAKQ,UAAU,YAAf,UACE,cAACnC,EAAD,UACE,cAACG,EAAD,CAAIgC,UAAU,MAAd,+CAIQ,IAARf,EACA,qBAAKe,UAAU,WAAf,SACE,+GAEF,KAGF,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKC,IAAK,6CAA8CL,EAAQJ,GAAG,GAAI,OAAQU,MAAM,WAEvF,sBAAKF,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBJ,EAAQO,QAC9B,4BAAIP,EAAQQ,UACZ,8BAAIR,EAAQS,MAAZ,YAEA,cAAC7B,EAAD,CAAMC,eAAMP,EAAMO,aAAIC,IAAOkB,EAAQJ,KAErC,wBAAQQ,UAAU,iBAAiBM,QAAS,WAC1C,IAAIP,EAAI7B,EAAMO,aAAGmB,EAAQJ,IAAM,EAC3Be,EAAC,YAAOrC,EAAMO,cAClB8B,EAAEX,EAAQJ,IAAMO,EAChB7B,EAAMsC,yBAAKD,GACXrC,EAAMuC,SAAS,CAACC,KAAO,2BAAQC,KAAO,CAACnB,GAAKI,EAAQJ,GAAIoB,KAAOhB,EAAQO,MAAOU,KAAO,MALvF,sCAOA,wBAAQb,UAAU,iBAAiBM,QAAS,WAAMZ,EAAQoB,UAA1D,4CAGJ,eAAC,IAAD,CAAKd,UAAU,OAAOe,QAAQ,OAAOC,iBAAiB,SAAtD,UACE,cAAC,IAAIC,KAAL,UACE,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASb,QAAS,WAAKhC,GAAM,GAAQa,EAAM,IAA9D,wCAEF,cAAC,IAAI8B,KAAL,UACE,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASb,QAAS,WAAKhC,GAAM,GAAQa,EAAM,IAA9D,2CAGJ,cAAC,IAAD,CAAeiC,GAAIhC,EAAKiC,WAAW,MAAMC,QAAS,IAAlD,SACC,cAAClD,EAAD,CAAYG,qBAAOA,EAAKD,iCAAOA,MAGhC,qBAAKiD,MAAO,CAACC,OAAQ","file":"static/js/4.20916d22.chunk.js","sourcesContent":["import React,{ useContext, useEffect, useState } from 'react';\nimport { useHistory,useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';\nimport {Nav} from 'react-bootstrap';\nimport {CSSTransition} from 'react-transition-group';\nimport { connect } from 'react-redux';\n// import {재고context} from './App'; \n\n\n// 옛날 라이프사이클 훅 만들기 ( 요즘은 useEffect 사용 )\n// class Detail2 extends React.Component {\n//   componentDidMount() { // 컴포넌트가 마운트 되었을 때 실행할코드\n//     //ajax요청같은거 할때\n//   }\n//   componentWillUnmount(){ // 컴포넌트가 사라지기 직전에 실행할 코드\n\n//   }\n// }\n\nlet 박스 = styled.div`\n  padding : 20px;\n`;\nlet 제목 = styled.h4`\n  font-size : 25px;\n  color : ${ props => props.색상 }\n`;\n\nfunction Detail(props) {\n\n    let [알람창,알람창변경] = useState(true);\n    // let 재고 = useContext(재고context);\n    let [누른탭,누른탭변경] = useState(0);\n    let [스위치,스위치변경] = useState(false);\n\n    useEffect(()=>{\n      let Timer = setTimeout(()=>{알람창변경(false)},2000);\n      return () => { clearTimeout(Timer) };\n      // return function 어쩌구() {\n      //   //컴포넌트가 사라질때 실행할 코드 (무조건 함수로 해야함)\n      // }\n      console.log('dfsdf');\n    },[알람창]); // 맨처음 로드되고 []안에 들어간 알람창의 state가 변경될때만 콜백함수를 실행\n               // 파라미터 안넣으면 업데이트 될때마다 콜백함수가 계속 실행\n               // 그냥 []만 파라미터로 넣으면 업데이트 되어도 콜백함수가 실행안됨\n\n    let {id} = useParams();\n    let history = useHistory();\n    let product = props.shoes.find(function(a){\n      return a.id == id;\n    })\n    return(\n      <div className=\"container\">\n        <박스> \n          <제목 className=\"red\">상세페이지</제목>\n        </박스>\n        {/* {재고} */}\n        {\n          알람창 === true ?\n          <div className=\"my-alert\">\n            <p>재고가 얼마 남지 않았습니다.</p>\n          </div> :\n          null\n        }\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <img src={\"https://codingapple1.github.io/shop/shoes\"+ (product.id+1) +\".jpg\"} width=\"100%\" />\n          </div>\n          <div className=\"col-md-6 mt-4\">\n            <h4 className=\"pt-5\">{product.title}</h4>\n            <p>{product.content}</p>\n            <p>{product.price}원</p>\n\n            <Info 재고 = {props.재고} num = {product.id}/>            \n\n            <button className=\"btn btn-danger\" onClick={()=>{\n              let a = props.재고[product.id] - 1;\n              let b = [...props.재고];\n              b[product.id] = a;\n              props.재고변경(b);\n              props.dispatch({type : '항목추가', data : {id : product.id, name : product.title, quan : 1}})\n            }}>주문하기</button>   \n            <button className=\"btn btn-danger\" onClick={()=>{ history.goBack();}}>뒤로가기</button> \n          </div>\n        </div>\n        <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-0\" onClick={()=>{스위치변경(false); 누른탭변경(0)}}>상품설명</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-1\" onClick={()=>{스위치변경(false); 누른탭변경(1)}}>배송정보</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\n         <Tabcontent 누른탭 = {누른탭} 스위치변경={스위치변경}/>\n        </CSSTransition>\n\n        <div style={{height: \"100px\"}}></div>\n\n      </div> \n    )\n  }\n\n  function Tabcontent(props) {\n\n    useEffect(()=>{\n       props.스위치변경(true);\n    })\n\n    if(props.누른탭 === 0) {\n      return <div>0번째</div>\n    } else if(props.누른탭 === 1) {\n      return <div>1번째</div>\n    } \n  }\n\n\n  function Info(props) {\n    return(\n      <p>재고 : {props.재고[props.num]}</p>\n    )\n  }\n\nfunction state를props화(state) {\n  return {\n    state : state.reducer,\n    alert열렸니 : state.reducer2\n  }\n}\n  \n\n export default connect(state를props화)(Detail);"],"sourceRoot":""}