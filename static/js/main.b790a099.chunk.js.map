{"version":3,"sources":["data.js","Detail.js","Cart.js","loading1.jpeg","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","Tabcontent","useEffect","스위치변경","누른탭","Info","재고","num","Detail","useState","알람창","알람창변경","누른탭변경","스위치","Timer","setTimeout","clearTimeout","useParams","history","useHistory","product","shoes","find","a","className","src","width","onClick","b","재고변경","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","style","height","connect","state","reducer","alert열렸니","reducer2","Table","responsive","map","i","name","quan","dispatch","type","재고context","React","createContext","Card","to","Test","useContext","App","data","shoes변경","loading","loading변경","Navbar","bg","expand","Container","Brand","as","Toggle","Collapse","NavDropdown","href","Divider","exact","path","Jumbotron","Button","Provider","value","axios","get","then","result","catch","console","log","loadImg","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","action","copy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b790a099.chunk.js","sourcesContent":["export default [\n    {\n      id : 0,\n      title : \"White and Black\",\n      content : \"Born in France\",\n      price : 120000\n    },\n  \n    {\n      id : 1,\n      title : \"Red Knit\",\n      content : \"Born in Seoul\",\n      price : 110000\n    },\n  \n    {\n      id : 2,\n      title : \"Grey Yordan\",\n      content : \"Born in the States\",\n      price : 130000\n    }\n  ] ","import React,{ useContext, useEffect, useState } from 'react';\nimport { useHistory,useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';\nimport {Nav} from 'react-bootstrap';\nimport {CSSTransition} from 'react-transition-group';\n// import {재고context} from './App'; \n\n\n// 옛날 라이프사이클 훅 만들기 ( 요즘은 useEffect 사용 )\n// class Detail2 extends React.Component {\n//   componentDidMount() { // 컴포넌트가 마운트 되었을 때 실행할코드\n//     //ajax요청같은거 할때\n//   }\n//   componentWillUnmount(){ // 컴포넌트가 사라지기 직전에 실행할 코드\n\n//   }\n// }\n\nlet 박스 = styled.div`\n  padding : 20px;\n`;\nlet 제목 = styled.h4`\n  font-size : 25px;\n  color : ${ props => props.색상 }\n`;\n\nfunction Detail(props) {\n\n    let [알람창,알람창변경] = useState(true);\n    // let 재고 = useContext(재고context);\n    let [누른탭,누른탭변경] = useState(0);\n    let [스위치,스위치변경] = useState(false);\n\n    useEffect(()=>{\n      let Timer = setTimeout(()=>{알람창변경(false)},2000);\n      return () => { clearTimeout(Timer) };\n      // return function 어쩌구() {\n      //   //컴포넌트가 사라질때 실행할 코드 (무조건 함수로 해야함)\n      // }\n      console.log('dfsdf');\n    },[알람창]); // 맨처음 로드되고 []안에 들어간 알람창의 state가 변경될때만 콜백함수를 실행\n               // 파라미터 안넣으면 업데이트 될때마다 콜백함수가 계속 실행\n               // 그냥 []만 파라미터로 넣으면 업데이트 되어도 콜백함수가 실행안됨\n\n    let {id} = useParams();\n    let history = useHistory();\n    let product = props.shoes.find(function(a){\n      return a.id == id;\n    })\n    return(\n      <div className=\"container\">\n        <박스> \n          <제목 className=\"red\">상세페이지</제목>\n        </박스>\n        {/* {재고} */}\n        {\n          알람창 === true ?\n          <div className=\"my-alert\">\n            <p>재고가 얼마 남지 않았습니다.</p>\n          </div> :\n          null\n        }\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <img src={\"https://codingapple1.github.io/shop/shoes\"+ (product.id+1) +\".jpg\"} width=\"100%\" />\n          </div>\n          <div className=\"col-md-6 mt-4\">\n            <h4 className=\"pt-5\">{product.title}</h4>\n            <p>{product.content}</p>\n            <p>{product.price}원</p>\n\n            <Info 재고 = {props.재고} num = {product.id}/>            \n\n            <button className=\"btn btn-danger\" onClick={()=>{\n              let a = props.재고[product.id] - 1;\n              let b = [...props.재고];\n              b[product.id] = a;\n              props.재고변경(b);\n            }}>주문하기</button>   \n            <button className=\"btn btn-danger\" onClick={()=>{ history.goBack();}}>뒤로가기</button> \n          </div>\n        </div>\n        <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-0\" onClick={()=>{스위치변경(false); 누른탭변경(0)}}>Active</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-1\" onClick={()=>{스위치변경(false); 누른탭변경(1)}}>Option 1</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-2\" onClick={()=>{스위치변경(false); 누른탭변경(2)}}>Option 2</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\n         <Tabcontent 누른탭 = {누른탭} 스위치변경={스위치변경}/>\n        </CSSTransition>\n\n        <div style={{height: \"100px\"}}></div>\n\n      </div> \n    )\n  }\n\n  function Tabcontent(props) {\n\n    useEffect(()=>{\n       props.스위치변경(true);\n    })\n\n    if(props.누른탭 === 0) {\n      return <div>0번째</div>\n    } else if(props.누른탭 === 1) {\n      return <div>1번째</div>\n    } else if(props.누른탭 === 2) {\n      return <div>2번째</div>\n    }\n    \n  }\n\n\n  function Info(props) {\n    return(\n      <p>재고 : {props.재고[props.num]}</p>\n    )\n  }\n  \n  export default Detail;","import React from 'react';\nimport {Table} from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\n\nfunction Cart(props) {\n    return(\n        <div>\n            <Table responsive=\"sm\">\n                <thead>\n                <tr>\n                    <th>#</th>\n                    <th>상품명</th>\n                    <th>수량</th>\n                    <th>변경</th>\n                </tr>\n                </thead>\n                <tbody>\n                    {\n                        props.state.map((a,i)=>{\n                            return(\n                                <tr key={i}>\n                                    <td>{a.id}</td>\n                                    <td>{a.name}</td>\n                                    <td>{a.quan}</td>\n                                    <td><button onClick={()=>{\n                                        props.dispatch({type : '수량증가'})\n                                    }}>+</button>\n                                    <button onClick={()=>{\n                                        props.dispatch({type : '수량감소'})\n                                    }}>-</button>\n                                    </td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </Table>\n                {\n                    props.alert열렸니 === true\n                    ? (<div className=\"my-alert\">\n                        <p>지금 구매하면 20% 할인</p>\n                        <button onClick={()=>{\n                            props.dispatch({type : 'close'})\n                        }}>닫기</button>\n                    </div>)\n                    : null\n                }\n        </div>\n    )\n}\n\nfunction state를props화(state) {\n    return {\n        state : state.reducer ,\n        alert열렸니 : state.reducer2\n    }\n}\n\n\nexport default connect(state를props화)(Cart);","export default __webpack_public_path__ + \"static/media/loading1.f5b0fa9b.jpeg\";","import React, {useContext, useState} from 'react';\nimport './App.css';\nimport { Navbar, Container, Nav, NavDropdown, Jumbotron, Button} from 'react-bootstrap';\nimport data from './data.js'\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Detail from './Detail';\nimport Cart from './Cart';\nimport axios from 'axios';\nimport loadImg from './loading1.jpeg';\n\n\nexport let 재고context = React.createContext();\n\nfunction App() {\n  let [shoes,shoes변경] = useState(data);\n  let [loading,loading변경] = useState(false);\n  let [재고,재고변경] = useState([10,11,12]);\n\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand as={Link} to=\"/\">ShoeShop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/cart\">Cart</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Season Off</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n\n          <div className=\"container\">\n\n            <재고context.Provider value={재고}>\n\n            <div className=\"row\">\n                {\n                  shoes.map((a,i) => {\n                    return <Card shoes={a} i={i} key={i} />\n                  }\n                  )\n                }\n            </div>\n\n            </재고context.Provider>\n            <button className=\"btn btn-primary\"  onClick={()=>{\n              \n              loading변경(true);\n              // axios.post('서버URL',{id : 'codingapple', pw : 1234});\n              // fetch('https://codingapple1.github.io/shop/data2.json')\n              // .then() fetch는 json데이터를 object로 바꿔주지 않음 따로 해야됨\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result)=>{\n                setTimeout(()=>{\n                  loading변경(false);\n                  shoes변경([...shoes, ...result.data]);\n                },1000);\n              })\n              .catch(()=>{\n                loading변경(false);\n                console.log(\"실패했어요\");\n              })\n            }}>더보기</button>\n            {\n              loading === true ?\n              <div>\n               <img style={{width: '50px'}} src={loadImg}/>\n              </div>\n              : null\n            }\n          </div>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <재고context.Provider value={재고}>\n          <Detail shoes = {shoes} 재고 = {재고} 재고변경 = {재고변경}/>\n          </재고context.Provider>\n        </Route>\n\n        <Route path=\"/cart\">\n            <Cart />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Card(props) {\n  return(\n    <div className=\"col-md-4\">\n      <img src={\"https://codingapple1.github.io/shop/shoes\"+(props.i+1)+\".jpg\"} width={\"100%\"}/>\n      <h4><Link to={\"/detail/\"+props.i}>{props.shoes.title}</Link></h4>\n      <p>{props.shoes.content}</p>\n      <p>{props.shoes.price}₩</p>\n      <Test i={props.i}/>\n    </div>\n  )\n}\n\nfunction Test(props) {\n  let 재고 = useContext(재고context);\n  return(\n    <p>재고 : {재고[props.i]}</p>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let 초기값 =  [\n    {id : 0, name : '멋진신발', quan : 2},\n    {id : 1, name : '이쁜신발', quan : 4}\n  ];\n  \n\nfunction reducer (state = 초기값, action) {\n  if(action.type === '수량증가') {\n    let copy = [...state];\n    copy[0].quan++;\n    return copy;\n  } else if(action.type ==='수량감소') {\n      let copy = [...state];\n      copy[0].quan--;\n      return copy;\n  } else {\n    return state;\n  }\n}\n\nfunction reducer2 (state=true, action) {\n  if(action.type === 'close') {\n    return false;\n  } else\n  return state;\n}\n\nexport {reducer,reducer2};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore} from 'redux';\nimport { reducer, reducer2 } from './reducer';\n\nlet store = createStore(combineReducers({reducer,reducer2}));\n\nReactDOM.render(\n  <React.StrictMode> \n    <BrowserRouter>\n      <Provider store = {store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}