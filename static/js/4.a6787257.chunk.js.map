{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","Tabcontent","useEffect","스위치변경","누른탭","Info","재고","num","Recent","history","useHistory","item","shoes","find","a","id","Number","c","className","onClick","push","src","width","title","connect","state","reducer","alert열렸니","reducer2","useState","알람창","알람창변경","누른탭변경","스위치","Timer","setTimeout","clearTimeout","useParams","product","arr","localStorage","getItem","JSON","parse","Set","setItem","stringify","b","content","price","재고변경","dispatch","type","data","name","quan","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout","map","i"],"mappings":"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","file":"static/js/4.a6787257.chunk.js","sourcesContent":["import React,{ useContext, useEffect, useState } from 'react';\nimport { useHistory,useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';\nimport {Nav} from 'react-bootstrap';\nimport {CSSTransition} from 'react-transition-group';\nimport { connect } from 'react-redux';\n// import {재고context} from './App'; \n\n\n// 옛날 라이프사이클 훅 만들기 ( 요즘은 useEffect 사용 )\n// class Detail2 extends React.Component {\n//   componentDidMount() { // 컴포넌트가 마운트 되었을 때 실행할코드\n//     //ajax요청같은거 할때\n//   }\n//   componentWillUnmount(){ // 컴포넌트가 사라지기 직전에 실행할 코드\n\n//   }\n// }\n\nlet 박스 = styled.div`\n  padding : 20px;\n`;\nlet 제목 = styled.h4`\n  font-size : 25px;\n  color : ${ props => props.색상 }\n`;\n\nfunction Detail(props) {\n\n    let [알람창,알람창변경] = useState(true);\n    // let 재고 = useContext(재고context);\n    let [누른탭,누른탭변경] = useState(0);\n    let [스위치,스위치변경] = useState(false);\n    \n    \n\n    useEffect(()=>{\n      let Timer = setTimeout(()=>{알람창변경(false)},2000);\n      return () => { clearTimeout(Timer) };\n      // return function 어쩌구() {\n      //   //컴포넌트가 사라질때 실행할 코드 (무조건 함수로 해야함)\n      // }\n      console.log('dfsdf');\n    },[알람창]); // 맨처음 로드되고 []안에 들어간 알람창의 state가 변경될때만 콜백함수를 실행\n               // 파라미터 안넣으면 업데이트 될때마다 콜백함수가 계속 실행\n               // 그냥 []만 파라미터로 넣으면 업데이트 되어도 콜백함수가 실행안됨\n\n\n    let {id} = useParams();\n    let history = useHistory();\n    let product = props.shoes.find(function(a){\n      return a.id == id;\n    })\n\n\n    useEffect(()=>{\n      let arr = localStorage.getItem('watched');\n      if(arr == null) {arr = []}\n      else { arr = JSON.parse(arr); }\n      arr.push(id);\n      arr = new Set(arr);\n      arr = [...arr];\n      localStorage.setItem('watched',JSON.stringify(arr));\n    },[]);\n\n    let b = JSON.parse(localStorage.getItem('watched'));\n  \n\n    return(\n      <div className=\"container\">\n        <박스> \n          <제목 className=\"red\">상세페이지</제목>\n        </박스>\n        {/* {재고} */}\n        <div className=\"row\">\n          <div className=\"col-9\">\n            {\n              알람창 === true ?\n              <div className=\"my-alert\">\n                <p>재고가 얼마 남지 않았습니다.</p>\n              </div> :\n              null\n            }\n            <div className=\"row\">\n            <div className=\"col-md-6\">\n              <img src={\"https://codingapple1.github.io/shop/shoes\"+ (product.id+1) +\".jpg\"} width=\"100%\" />\n            </div>\n            <div className=\"col-md-6 mt-4\">\n              <h4 className=\"pt-5\">{product.title}</h4>\n              <p>{product.content}</p>\n              <p>{product.price}원</p>\n\n              <Info 재고 = {props.재고} num = {product.id}/>            \n\n              <button className=\"btn btn-danger\" onClick={()=>{\n                let a = props.재고[product.id] - 1;\n                let b = [...props.재고];\n                b[product.id] = a;\n                props.재고변경(b);\n                props.dispatch({type : '항목추가', data : {id : product.id, name : product.title, quan : 1}})\n              }}>주문하기</button>   \n              <button className=\"btn btn-danger\" onClick={()=>{ history.goBack();}}>뒤로가기</button> \n            </div>\n          </div>\n          <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n            <Nav.Item>\n              <Nav.Link eventKey=\"link-0\" onClick={()=>{스위치변경(false); 누른탭변경(0)}}>상품설명</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"link-1\" onClick={()=>{스위치변경(false); 누른탭변경(1)}}>배송정보</Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\n          <Tabcontent 누른탭 = {누른탭} 스위치변경={스위치변경}/>\n          </CSSTransition>\n          \n\n          </div>\n          <div className=\"col-3 watched\">\n            <h5>최근본상품</h5>\n              {\n                !localStorage.getItem('watched') === true ?\n                null :\n                b.map((c,i)=>{\n                  return <Recent c={c} shoes={props.shoes} i={i}/>\n                })\n              }\n\n          </div>\n        </div>\n\n      </div> \n    )\n  }\n\n  function Tabcontent(props) {\n\n    useEffect(()=>{\n       props.스위치변경(true);\n    })\n\n    if(props.누른탭 === 0) {\n      return <div>0번째</div>\n    } else if(props.누른탭 === 1) {\n      return <div>1번째</div>\n    } \n  }\n\n\n  function Info(props) {\n    return(\n      <p>재고 : {props.재고[props.num]}</p>\n    )\n  }\n\nfunction state를props화(state) {\n  return {\n    state : state.reducer,\n    alert열렸니 : state.reducer2\n  }\n}\n  \nfunction Recent(props) {\n  let history = useHistory();\n  let item = props.shoes.find((a)=>a.id == Number(props.c));\n  return(\n    <div className=\"mt-4 card \" onClick={()=>{history.push('/detail/'+props.c)}}>\n      <img src={\"https://codingapple1.github.io/shop/shoes\"+ (Number(props.c)+1) +\".jpg\"} width=\"100%\" />\n      <p>{item.title}</p>\n    </div>\n  )\n}\n\n\n export default connect(state를props화)(Detail);"],"sourceRoot":""}