{"version":3,"sources":["data.js","Cart.js","loading1.jpeg","App.js","reportWebVitals.js","serviceWorkerRegistration.js","reducer.js","index.js"],"names":["id","title","content","price","Parent","props","Child1","이름","Child2","나이","useEffect","console","log","memo","connect","state","reducer","alert열렸니","reducer2","dispatch","useDispatch","useSelector","Table","responsive","map","a","i","name","quan","onClick","type","payload","className","Detail","lazy","재고context","React","createContext","Card","history","useHistory","push","shoes","src","width","style","cursor","Test","재고","useContext","App2","useState","count","setCount","age","setAge","App","data","shoes변경","loading","loading변경","재고변경","Navbar","bg","expand","Container","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","NavDropdown","Item","href","Divider","exact","path","Jumbotron","Button","variant","Provider","value","axios","get","then","result","setTimeout","catch","loadImg","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","초기값","store","createStore","combineReducers","action","copy","found","findIndex","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c85dff0b.chunk.js","sourcesContent":["export default [\n    {\n      id : 0,\n      title : \"White and Black\",\n      content : \"Born in France\",\n      price : 120000\n    },\n  \n    {\n      id : 1,\n      title : \"Red Knit\",\n      content : \"Born in Seoul\",\n      price : 110000\n    },\n  \n    {\n      id : 2,\n      title : \"Grey Yordan\",\n      content : \"Born in the States\",\n      price : 130000\n    }\n  ] ","import React, { useEffect, memo } from 'react';\nimport {Table} from 'react-bootstrap';\nimport { connect,useDispatch, useSelector } from 'react-redux';\nimport './Detail.scss';\n\n\nfunction Cart(props) {\n    let dispatch = useDispatch();\n    let state = useSelector((state)=>state) //콜백함수로 state(combineReducers된 store)를 state로 반환\n    return(\n        <div>\n            <Table responsive=\"sm\">\n                <thead>\n                <tr>\n                    <th>상품번호</th>\n                    <th>상품명</th>\n                    <th>수량</th>\n                    <th>변경</th>\n                </tr>\n                </thead>\n                <tbody>\n                    {\n                        props.state.map((a,i)=>{ //useSelector 사용시 state.reducer.map\n                            return(\n                                <tr key={i}>\n                                    <td>{a.id}</td>\n                                    <td>{a.name}</td>\n                                    <td>{a.quan}</td>\n                                    <td><button onClick={()=>{\n                                        dispatch({type : '수량증가',payload : a.id })\n                                    }}>+</button>\n                                    <button onClick={()=>{\n                                        dispatch({type : '수량감소',payload : a.id}) //useDispatch 사용\n                                    }}>-</button>\n                                    </td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </Table>\n                {\n                    props.alert열렸니 === true //useSelector 사용시 state.reducer2 === true;\n                    ? (<div className=\"my-alert\">\n                        <p>지금 구매하면 20% 할인</p>\n                        <button className=\"close-btn\" onClick={()=>{\n                            props.dispatch({type : 'close'}) //useDispatch 사용시 dispatch()만 사용\n                        }}>X</button>\n                    </div>)\n                    : null\n                }\n\n            <Parent 이름='qddf' 나이='22'/>\n        </div>\n\n    )\n}\n\nfunction state를props화(state) { //useSelector 사용시 작성안해도됨\n    return {\n        state : state.reducer ,\n        alert열렸니 : state.reducer2\n    }\n}\n\n\n\nfunction Parent(props){\n    return(\n        <div>\n            <Child1 이름={props.이름}/>\n            <Child2 나이={props.나이}/>\n        </div>\n    )\n}\n\nfunction Child1(){\n    useEffect(()=>{\n        console.log('렌더링됨1');\n    });\n    return <div>111111</div>\n}\n\nlet Child2 = memo(function(){\n    useEffect(()=>{\n        console.log('렌더링됨2');\n    });\n    return <div>222222</div>\n});\n\n\n\nexport default connect(state를props화)(Cart); // useSelector 사용시 export default Cart;","export default __webpack_public_path__ + \"static/media/loading1.f5b0fa9b.jpeg\";","import React, {useContext, useEffect, useState, lazy, Suspense} from 'react';\nimport './App.css';\nimport { Navbar, Container, Nav, NavDropdown, Jumbotron, Button} from 'react-bootstrap';\nimport data from './data.js'\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport Cart from './Cart';\nimport axios from 'axios';\nimport loadImg from './loading1.jpeg';\nlet Detail = lazy(()=>{ return import('./Detail.js')});\n\n\nexport let 재고context = React.createContext();\n\nfunction App() {\n  let [shoes,shoes변경] = useState(data);\n  let [loading,loading변경] = useState(false);\n  let [재고,재고변경] = useState([10,11,12]);\n\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand as={Link} to=\"/\">ShoeShop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/cart\">Cart</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Season Off</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n\n          <App2/>\n\n          <div className=\"container\">\n\n            <재고context.Provider value={재고}>\n\n            <div className=\"row\">\n                {\n                  shoes.map((a,i) => {\n                    return <Card shoes={a} i={i} key={i} />\n                  }\n                  )\n                }\n            </div>\n\n            </재고context.Provider>\n            <button className=\"btn btn-primary\"  onClick={()=>{\n              \n              loading변경(true);\n              // axios.post('서버URL',{id : 'codingapple', pw : 1234});\n              // fetch('https://codingapple1.github.io/shop/data2.json')\n              // .then() fetch는 json데이터를 object로 바꿔주지 않음 따로 해야됨\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result)=>{\n                setTimeout(()=>{\n                  loading변경(false);\n                  shoes변경([...shoes, ...result.data]);\n                },1000);\n              })\n              .catch(()=>{\n                loading변경(false);\n                console.log(\"실패했어요\");\n              })\n            }}>더보기</button>\n            {\n              loading === true ?\n              <div>\n               <img style={{width: '50px'}} src={loadImg}/>\n              </div>\n              : null\n            }\n          </div>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <재고context.Provider value={재고}>\n            <Suspense fallback={<div>Loading..</div>}>\n             <Detail shoes = {shoes} 재고 = {재고} 재고변경 = {재고변경}/>\n            </Suspense>\n          </재고context.Provider>\n        </Route>\n\n        <Route path=\"/cart\">\n            <Cart />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Card(props) {\n  let history = useHistory();\n  return(\n    <div className=\"col-md-4\" onClick={()=>{ history.push('/detail/'+props.shoes.id) }}>\n      <img src={\"https://codingapple1.github.io/shop/shoes\"+(props.i+1)+\".jpg\"} width={\"100%\"}/>\n      <h4 style={{cursor : 'pointer'}}>{props.shoes.title}</h4>\n      <p>{props.shoes.content}</p>\n      <p>{props.shoes.price}₩</p>\n      <Test i={props.i}/>\n    </div>\n  )\n}\n\nfunction Test(props) {\n  let 재고 = useContext(재고context);\n  return(\n    <p>재고 : {재고[props.i]}</p>\n  )\n}\n\nfunction App2() {\n  let [count,setCount] = useState(0);\n  let [age,setAge] = useState(20);\n  useEffect(()=>{\n    if(count != 0 && count<3) {\n      setAge(age+1);\n    }\n  },[count])\n  return(\n    <div>\n      <div>안녕하십니까 전 {age}</div>\n      <button onClick={()=>{\n          setCount(count+1);\n      }}>누르면 한살먹기</button>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","let 초기값 =  [];\n  \n\nfunction reducer (state = 초기값, action) {\n\n  if( action.type === '항목추가'){\n    let copy = [...state];\n    let found = copy.findIndex((a)=>{return a.id === action.data.id})\n    if(found>= 0) {\n      copy[found].quan++;\n      return copy\n    } else{\n    copy.push(action.data);\n    return copy;\n    }\n\n  } else if(action.type === '수량증가') {\n    let copy = [...state];\n    let found = copy.findIndex((a)=>{return a.id === action.payload})\n    copy[found].quan++;\n    return copy;\n  } else if(action.type ==='수량감소') {\n      let copy = [...state];\n      let found = copy.findIndex((a)=>{return a.id === action.payload})\n      if(copy[found].quan <= 0){\n        return copy;\n      } else {\n      copy[found].quan--;\n      return copy;\n      }\n  } else {\n    return state;\n  }\n}\n\nfunction reducer2 (state=true, action) {\n  if(action.type === 'close') {\n    return false;\n  } else\n  return state;\n}\n\nexport {reducer,reducer2};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore} from 'redux';\nimport { reducer, reducer2 } from './reducer';\nimport PWAPrompt from 'react-ios-pwa-prompt';\n\nlet store = createStore(combineReducers({reducer,reducer2}));\n\nReactDOM.render(\n  <React.StrictMode> \n    <BrowserRouter>\n      <Provider store = {store}>\n        <PWAPrompt />\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}